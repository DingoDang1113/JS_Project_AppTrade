/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("let tikerArr = [];\nlet purchasePrices = {};\nlet quanties = {};\nasync function apiFetch(symbol) {\n  const url = `https://financialmodelingprep.com/api/v3/quote/${symbol}?apikey=f43645c7dcc9b1fe95e501b844e1c963`;\n  try {\n    const response = await fetch(url);\n    const result = await response.json();\n    // console.log(JSON.stringify(response));\n    localStorage.setItem(`${symbol}`, JSON.stringify(result));\n    console.log(localStorage.setItem(`${symbol}`, JSON.stringify(result)));\n    // console.log(result)\n    return result;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\nasync function apiInput(symbol, purchasePrice, quantity) {\n  const data = await apiFetch(symbol);\n  if (data.length > 0) {\n    //displayData(data);\n    //console.log(data)\n    purchasePrices[symbol] = purchasePrice;\n    quanties[symbol] = quantity;\n    localStorage.setItem('purchasePrices', JSON.stringify(purchasePrices));\n    localStorage.setItem('quantities', JSON.stringify(quanties));\n    return parseFloat(data[0].price);\n  }\n}\nfunction displayData(data) {\n  const contentDiv = document.getElementById('content');\n  //const searchBox = document.getElementById('searchBox');\n\n  // data.forEach((stock) => {\n  const stock = data[0];\n  const symbol = document.createElement('span');\n  const tile = document.createElement('div');\n  tile.style.border = '1px solid white';\n  tile.style.margin = '10px';\n  tile.style.padding = '1px';\n  // tile.style.width = '100px';\n\n  const info = document.createElement('span');\n  const percentChg = function (percent) {\n    if (percent > 0) {\n      return `⬆${percent.toFixed(2)}%`;\n    } else {\n      return `⬇${percent.toFixed(2)}%`;\n    }\n  };\n  if (stock['changesPercentage'] < 0) {\n    info.style.color = 'red';\n  }\n  info.textContent = `${stock['symbol']} $${stock['price'].toFixed(2)} ${percentChg(stock['changesPercentage'])}`;\n  tile.appendChild(info);\n  contentDiv.appendChild(tile);\n  contentDiv.appendChild(price);\n  return stock['price'];\n  // });\n}\n\nfunction postLocalData(key) {\n  let retrieveData = localStorage.getItem(key);\n  if (retrieveData) {\n    let locData = JSON.parse(retrieveData);\n    displayData(locData);\n  }\n}\nasync function onSubmitForm() {\n  //event.preventDefault();\n  const ticker = document.getElementById('ticker').value;\n  const purchasePrice = parseFloat(document.getElementById('purchasePrice').value);\n  const quantity = parseFloat(document.getElementById('quantity').value);\n  document.getElementById('estimatorForm').style.backgroundColor = '#e3ffa8';\n  const currentPrice = await apiInput(ticker, purchasePrice, quantity);\n  console.log(currentPrice);\n  if (currentPrice) {\n    const gainLoss = (currentPrice - purchasePrice) * quantity;\n    const roi = (currentPrice / purchasePrice - 1).toFixed(2) * 100;\n    const infoDiv = document.createElement('div');\n    infoDiv.innerHTML = `\n      <p>${ticker}</p>\n      <p>$${currentPrice.toFixed(2)}</p>\n      <p>$${purchasePrice.toFixed(2)}</p>  \n      <p>$${gainLoss.toFixed(2)}</p>\n      <p>${roi.toFixed(2)}%</p>\n      \n    `;\n    tikerArr.push(ticker); // array = ['JPM, price, quantity','APPL','PE']\n    // console.log(tikerArr);\n    // localStorage.setItem(`${symbol}`, JSON.stringify(result));\n    //Write a method for each item -> builds an array the trader the trader is watching -> iterate thru the array from local storage -> pass the info to card\n\n    document.getElementById('content').appendChild(infoDiv);\n  } else {\n    console.log('failed to fetech current price');\n  }\n}\nfunction printTile() {\n  // render all tiles\n  //loop thru the tikerArr \n  // let locTickers = JSON.parse(localStorage.getItem('tickers'));\n  document.getElementById('content').innerHTML = \"\";\n  // pass tiker into postLocData()\n\n  tikerArr.forEach(ticker => {\n    let tickerData = JSON.parse(localStorage.getItem(ticker));\n    displayData(tickerData);\n  });\n}\nasync function buildChart() {\n  const tickers = tikerArr;\n  let gainLosses = [];\n  let labels = [];\n  const purchasePrices = JSON.parse(localStorage.getItem('purchasePrices'));\n  const quanties = JSON.parse(localStorage.getItem('quantities'));\n  for (let i = 0; i < tickers.length; i++) {\n    let tickerData = JSON.parse(localStorage.getItem(tickers[i]));\n    if (tickerData && tickerData.length > 0) {\n      let currentPrice = tickerData.price;\n      let purchasePrice = tickerData.price;\n      let quantity = quanties[tickers[i]];\n      let gainLoss = (currentPrice - purchasePrice) * quantity;\n      labels.push(tickerData.symbol);\n      gainLosses.push(gainLoss);\n    }\n  }\n  const ctx = document.getElementById('myChart').getContext('2d');\n  new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: labels,\n      datasets: [{\n        label: 'Gain/Loss in USD',\n        data: gainLosses,\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderWidth: 1\n      }]\n    },\n    options: {\n      responsive: true,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\nprintTile();\nbuildChart();\n\n//local storage can pull what I have saved \n\n// apiInput('AAPL');\n//apiIndex()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;